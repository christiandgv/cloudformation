AWSTemplateFormatVersion: "2010-09-09"
Description: >
  Resources for hosting a static website on Amazon Simple Storage Service (S3) & CloudFront.
Parameters:
  DomainName:
    Type: String
    Description: The website domain name.
    Default: intermediarios-dev.liberty.ec
  PriceClass:
    Type: String
    Description: The CloudFront distribution price class
    Default: 'PriceClass_All'
    AllowedValues:
      - 'PriceClass_100'
      - 'PriceClass_200'
      - 'PriceClass_All'
  BucketName:
    Type: String
    Default: intermediarios-dev.liberty.ec
Resources:
  TheCloudFrontDistribution:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Aliases: !Ref DomainName
        DefaultCacheBehavior:
          Compress: true
          ForwardedValues:
            QueryString: false
          TargetOriginId: the-s3-bucket
          ViewerProtocolPolicy: redirect-to-https
        DefaultRootObject: index.html
        CustomErrorResponses:
          - ErrorCachingMinTTL: 300
            ErrorCode: 404
            ResponseCode: 404
            ResponsePagePath: /assets/pages/404.html
          - ErrorCachingMinTTL: 300
            ErrorCode: 403
            ResponseCode: 404
            ResponsePagePath: /assets/pages/404.html
        Enabled: true
        HttpVersion: http2
        Origins:
          - DomainName: 'intermediarios-dev.liberty.ec.s3.amazonaws.com'
            Id: the-s3-bucket
            S3OriginConfig:
              OriginAccessIdentity:
                Fn::Join [ "", [ "origin-access-identity/cloudfront/", !Ref TheCloudFrontOriginAccessIdentity ] ]
        PriceClass: 'PriceClass_All'
        ViewerCertificate:
          CloudFrontDefaultCertificate: true
          MinimumProtocolVersion: TLSv1
      Tags:
        - Key: Domain
          Value: 'intermediarios-dev.liberty.ec'

  TheCloudFrontOriginAccessIdentity:
    Type: AWS::CloudFront::CloudFrontOriginAccessIdentity
    Properties:
      CloudFrontOriginAccessIdentityConfig:
        Comment: "cloudfront de  intermediarios-dev.liberty.ec"
 
  TheBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: 'intermediarios-dev.liberty.ec'
      PolicyDocument:
        Statement:
          -
            Action:
              - s3:GetObject
            Effect: Allow
            Resource: Fn::Join [ "", [ "arn:aws:s3:::", 'intermediarios-dev.liberty.ec', "/*" ] ]
            Principal:
              CanonicalUser: Fn::GetAtt TheCloudFrontOriginAccessIdentity.S3CanonicalUserId